# This is the path for the KnittingBoar JAR
iterativereduce.jar.path=iterativereduce-0.1-SNAPSHOT.jar

# Path to your application (which was compiled against KB!)
app.jar.path=KnittingBoar-1.0-SNAPSHOT-jar-with-dependencies.jar

# Comma separated list of other JAR's required for depenedencies
app.lib.jar.path=avro-1.7.1.jar,avro-ipc-1.7.1.jar

# Input file(s) to process
#app.input.path=src/test/resources/data/iris/threeworkers/
app.input.path=/tmp/mnist_filtered_conversion_test.metronome

# Output results to
#app.output.path=hdfs:///user/yarn/kboar/output
app.output.path=file:///tmp/MNIST/dbn.mnist.twolabels.dl_model

# Number of iterations
app.iteration.count=2

app.name=IR_DBN_MNIST_TWO_LABELS

# Requested memory for YARN clients
yarn.memory=512
# The main() class/entry for the AppMaster
yarn.master.main=tv.floe.metronome.deeplearning.dbn.iterativereduce.MasterNode
# Any extra command-line args
yarn.master.args=

# The main() class/entry for the AppWorker
yarn.worker.main=tv.floe.metronome.deeplearning.dbn.iterativereduce.WorkerNode

# Any extra command-line args
yarn.worker.args=

# Any other configuration params, will be pushed down to clients
#tv.floe.metronome.neuralnetwork.conf.RecordFactoryClassname=tv.floe.metronome.io.records.MetronomeRecordFactory

tv.floe.metronome.dbn.conf.LearningRate=0.01

tv.floe.metronome.dbn.conf.hiddenLayerSizes=500,250,100

tv.floe.metronome.dbn.conf.batchSize=20

# tv.floe.metronome.neuralnetwork.conf.InputRecordSchema=i:784 | o:10

# tv.floe.metronome.neuralnetwork.conf.LayerNeuronCounts=784,400,10
	      

#tv.floe.metronome.neuralnetwork.conf.MetricsOn=false

